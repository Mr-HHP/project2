			模拟日志文件产生的过程
			知识点：
			1java定时调用程序
			2.网络编程（客户端，服务器端）
			3.IO流

		1温度和湿度数据采集过程的模拟
		（1）客户端定时发送采集温度和湿度的指令给服务器端（树莓派系统）
		发送指令如下：
			<?xml version="1.0" encoding="UTF-8"?>
		<Message>
    		    <SrcID>100</SrcID>
      		  <DstID>101</DstID>
       		  <DevID>2</DevID>
        	<SensorAddress>16</SensorAddress>
        	<Counter>1</Counter>
        	<Cmd>3</Cmd>
        	<Status>1</Status>
		</Message>
		（2）服务器端接受客户端发送的指令并且模拟温度和湿度数据
			把模拟完成之后的数据写会给客户端

			注意：<data>标签中模拟的就是温度和湿度数据 （5d606f7802）
				温度的数据是前4位5d60 湿度的数据是紧跟温度数据的后四位6f78
				提示：Math.random()——>[0,1)
		
			<?xml version="1.0" encoding="UTF-8"?>
	<Message>
        	<SrcID>100</SrcID>
        	<DstID>101</DstID>
        	<DevID>2</DevID>
        	<SensorAddress>0</SensorAddress>
        	<Counter>0</Counter>
        	<Cmd>3</Cmd>
        	<Data>5d606f7802</Data>
        	<Status>1</Status>
	</Message>
	(3)客户端接受服务器端发回的数据，处理得到一行日志内容
	srcId|destId|devId|sersorAddress|count|cmd|Data|status|gather_date
	发送端的Id|树莓派系统的Id|实验箱区域模块的Id|模块上传感器的地址|传感器的个数|发送指令的标号|服务器
	端返回的温度和湿度数据|状态码|生成这行指令的时间
	
create table humid(
	id int primary key,
	srcId varchar(3) not null,
	dstId varchar(3) not null,
	decId varchar(2) not null,
	sersorAddress varchar(5) not null,
	counter varchar(2) not null,
	com varchar(2) not null,
	temperature varchar(3) not null,
	humidity varchar(5) not null,
	status varchar(1) not null,
	time varchar(30) not null
	);
	100|101|2|16|1|3|5d606f7802|1|new Date().getTime()
	(4)把第3步得到的一行日志信息写入到文件radwtmp

	注意：温度值1-4位（默认16进制），计算公式： 10进制的温度值*0.00268127-46.85
	湿度5-8（默认16进制），计算公式：10进制的湿度值*0.00190735-6




	
	采集光照强度的过程
	（1）客户端发送采集光照强度的指令（xml）给服务器端（树莓派系统）
	<?xml version="1.0" encoding="UTF-8"?>
	<Message>
        	 <SrcID>100</SrcID>
      		  <DstID>101</DstID>
      		  <DevID>2</DevID>
    		    <SensorAddress>256</SensorAddress>
     		   <Counter>1</Counter>
       		 <Cmd>3</Cmd>
         <Status>1</Status>
	</Message>
	（2）服务器端接受指令模拟光照数据写回给客户端(xml)
	注意：<data>标签中的数据应该是模拟的光照数据000103
		模拟产生的数据前四位0001
	<?xml version="1.0" encoding="UTF-8"?>
	<Message>
        	<SrcID>100</SrcID>
        	<DstID>101</DstID>
        	<DevID>2</DevID>
        	<SensorAddress>0</SensorAddress>
        	<Counter>0</Counter>
        	<Cmd>3</Cmd>
        	<Data>000103</Data>
        	<Status>1</Status>
	</Message>
	(3)接受服务器端发送过来的指令把指令拼接成一行日志输出
	srcId|destId|devId|sersorAddress|count|cmd|Data|status|gather_date
	发送端的Id|树莓派系统的Id|实验箱区域模块的Id|模块上传感器的地址|传感器的个数|发送指令的标号|服务器发送
	过来的光照强度|状态码|生成这行指令的时间
	100|101|2|256|1|3| 000103|1|new Date().getTime()
	(4)把第（3）采集得到的一行日志写到radwtmp里面
		
	光照强度直接取1-4位，直接转化为10进制





模拟采集二氧化碳的数据过程
（1）客户端定时发送采集二氧化碳的指令给服务器端（树莓派系统）
	<Message>
        <SrcID>100</SrcID>
        <DstID>101</DstID>
        <DevID>2</DevID>
        <SensorAddress>1280</SensorAddress>
        <Counter>1</Counter>
        <Cmd>3</Cmd>
        <Status>1</Status>
</Message>
（2）服务器端接受客户端发过来采集二氧化碳的指令并且模拟二氧化碳的数据写会给客户端
	注意：二氧化碳模拟的值037b01
	模拟的二氧化碳值是前4位037b，后面01也是拼接的固定值
	<?xml version="1.0" encoding="UTF-8"?>
	<Message>
        	<SrcID>100</SrcID>
        	<DstID>101</DstID>
        	<DevID>2</DevID>
        	<SensorAddress>0</SensorAddress>
        	<Counter>0</Counter>
        	<Cmd>3</Cmd>
        	<Data>037b01</Data>
        	<Status>1</Status>
	</Message>
（3）客户端接受服务器端发送回来的信息（xml），生成一条日志信息
	srcId|dstId|devId|sersorAddress|count|cmd|Data|status|gather_date
	发送端的Id|树莓派系统的Id|实验箱区域模块的Id|模块上传感器的地址|传感器的个数|发送指令的标号|
	服务器端发送回来的二氧化碳的值|状态码|生成这行指令的时间
	100|101|2|1280|1|3|037b01|1|new Date().getTime();
 (4)	把第三步采集的日志记录写入到radwtmp日志文件中
	
	
	二氧化碳的值直接取1-4位，直接转化为10进制

	
	

	

	
























		
	 